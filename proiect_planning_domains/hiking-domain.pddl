(define (domain hiking)
  (:requirements :strips :equality :typing)
  (:types car backpack person group place water food map)
  (:predicates 
              (at_backpack ?b - backpack ?p - place)
              (at_person ?p1 - person ?pl - place)
              (at_car ?c - car ?p - place)
              (partners ?g - group ?p1 - person ?p2 - person)
              (up ?b - backpack)
              (down ?b - backpack)
			  (thirsty ?p - person ?p2 - place)
			  (hungry ?p - person ?p2 - place)
			  (at_water ?w - water ?b - backpack)
			  (at_food ?f - food ?b - backpack)
			  (at_map ?m - map ?b - backpack)
              (walked ?g - group ?p - place )
			  (hiked ?g - group ?p - place ?m - map)
              (next ?pl1 - place ?pl2 - place )
)

  (:action put_down_backpack
         :parameters ( ?person ?place ?backpack)
         :precondition (and (at_person ?person ?place)
							(at_backpack ?backpack ?place)
							(up ?backpack))
         :effect (and (down ?backpack)
				 (not (up ?backpack)))
		)
		
  (:action put_up_backpack
         :parameters ( ?person ?place ?backpack)
         :precondition (and (at_person ?person ?place)
							(at_backpack ?backpack ?place)
							(down ?backpack))
         :effect (and (up ?backpack)
					(not (down ?backpack)))
		 )
		 
  (:action drink_water
		 :parameters (?person ?water ?backpack ?place)
         :precondition (and (at_person ?person ?place)
							(at_backpack ?backpack ?place)
							(at_water ?water ?backpack)
							(down ?backpack)
							(thirsty ?person ?place))
         :effect (and (not (thirsty ?person ?place)))
		 )
		 
  (:action eat_food
		 :parameters (?person ?food ?backpack ?place)
         :precondition (and (at_person ?person ?place)
							(at_backpack ?backpack ?place)
							(at_food ?food ?backpack)
							(down ?backpack)
							(hungry ?person ?place))
         :effect (and (not (hungry ?person ?place)))
		 )
		 
  (:action drive_2passenger
         :parameters ( ?person1 ?from_place ?to_place ?car ?person2)
         :precondition (and (at_person ?person1 ?from_place)
							(at_car ?car ?from_place)
							(at_person ?person2 ?from_place)
							(not (= ?person1 ?person2)))
         :effect (and  (at_person ?person1 ?to_place)
						(not (at_person ?person1 ?from_place))
						(at_car ?car ?to_place)
						(not (at_car ?car ?from_place))
						(at_person ?person2 ?to_place)
						(not (at_person ?person2 ?from_place)))
		)
		
  (:action drive
         :parameters ( ?person ?from_place ?to_place ?car)
         :precondition (and (at_person ?person ?from_place)
						(at_car ?car ?from_place))
         :effect (and (at_person ?person ?to_place)
						(not (at_person ?person ?from_place))
						(at_car ?car ?to_place)
						(not (at_car ?car ?from_place)))
		)
		
  (:action drive_backpack
         :parameters ( ?person ?from_place ?to_place ?car ?backpack)
         :precondition (and (at_person ?person ?from_place)
							(at_car ?car ?from_place)
							(at_backpack ?backpack ?from_place)
							(down ?backpack))
         :effect (and (at_person ?person ?to_place)
					(not (at_person ?person ?from_place))
					(at_car ?car ?to_place)
					(not (at_car ?car ?from_place))
					(at_backpack ?backpack ?to_place)
					(not (at_backpack ?backpack ?from_place)))
		)
		
  (:action drive_backpack_passenger
         :parameters ( ?person1 ?from_place ?to_place ?car ?backpack ?person2)
         :precondition (and (at_person ?person1 ?from_place)
							(at_car ?car ?from_place)
							(at_backpack ?backpack ?from_place)
							(down ?backpack)
							(at_person ?person2 ?from_place)
							(not (= ?person1 ?person2)))
         :effect (and (at_person ?person1 ?to_place)
					(not (at_person ?person1 ?from_place))
					(at_car ?car ?to_place)
					(not (at_car ?car ?from_place))
					(at_backpack ?backpack ?to_place)
					(not (at_backpack ?backpack ?from_place))
					(at_person ?person2 ?to_place)
					(not (at_person ?person2 ?from_place)))
			)
			
  (:action walk_together
         :parameters ( ?backpack ?from_place ?person1 ?to_place ?person2 ?group)
         :precondition (and (at_backpack ?backpack ?from_place)
							(up ?backpack)
							(at_person ?person1 ?from_place)
							(next ?from_place ?to_place)
							(at_person ?person2 ?from_place)
							(not (= ?person1 ?person2))
							(walked ?group ?from_place)
							(partners ?group ?person1 ?person2))
         :effect (and (at_person ?person1 ?to_place)
					(not (at_person ?person1 ?from_place))
					(at_person ?person2 ?to_place)
					(not (at_person ?person2 ?from_place))
					(walked ?group ?to_place)
					(not (walked ?group ?from_place)))
			)
			
  (:action hike_together
         :parameters ( ?backpack ?place ?person1 ?person2 ?group ?map)
         :precondition (and (at_backpack ?backpack ?place)
							(up ?backpack)
							(at_person ?person1 ?place)
							(at_person ?person2 ?place)
							(at_map ?map ?backpack)
							(not (= ?person1 ?person2))
							(walked ?group ?place)
							(partners ?group ?person1 ?person2))
         :effect (and (hiked ?group ?place ?map))
		 )
)
  